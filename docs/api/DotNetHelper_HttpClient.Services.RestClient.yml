### YamlMime:ManagedReference
items:
- uid: DotNetHelper_HttpClient.Services.RestClient
  commentId: T:DotNetHelper_HttpClient.Services.RestClient
  id: RestClient
  parent: DotNetHelper_HttpClient.Services
  children:
  - DotNetHelper_HttpClient.Services.RestClient.#ctor
  - DotNetHelper_HttpClient.Services.RestClient.#ctor(System.Net.Http.HttpMessageHandler)
  - DotNetHelper_HttpClient.Services.RestClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  - DotNetHelper_HttpClient.Services.RestClient.AlwaysEnsureSuccessCode
  - DotNetHelper_HttpClient.Services.RestClient.DownloadFile(System.String,System.IO.FileStream)
  - DotNetHelper_HttpClient.Services.RestClient.DownloadFile(System.String,System.IO.FileStream,System.IProgress{System.Double},System.Byte[])
  - DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync(System.String,System.IO.FileStream)
  - DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync(System.String,System.IO.FileStream,System.IProgress{System.Double},System.Byte[])
  - DotNetHelper_HttpClient.Services.RestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.Get``1(System.Func{System.String,``0},System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetAsync``1(System.Func{System.String,``0},System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetBytes(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetBytes(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetStream(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetStream(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetString(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetString(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetStringAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.GetStringAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  - DotNetHelper_HttpClient.Services.RestClient.HttpRequestExecuteAsync
  langs:
  - csharp
  - vb
  name: RestClient
  nameWithType: RestClient
  fullName: DotNetHelper_HttpClient.Services.RestClient
  type: Class
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: RestClient
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 26
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  syntax:
    content: 'public class RestClient : HttpClient, IDisposable, IRestClient'
    content.vb: >-
      Public Class RestClient
          Inherits HttpClient
          Implements IDisposable, IRestClient
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageInvoker
  - System.Net.Http.HttpClient
  implements:
  - System.IDisposable
  - DotNetHelper_HttpClient.Interface.IRestClient
  inheritedMembers:
  - System.Net.Http.HttpClient.GetStringAsync(System.String)
  - System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  - System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  - System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  - System.Net.Http.HttpClient.GetStreamAsync(System.String)
  - System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  - System.Net.Http.HttpClient.GetAsync(System.String)
  - System.Net.Http.HttpClient.GetAsync(System.Uri)
  - System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  - System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  - System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.DeleteAsync(System.String)
  - System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  - System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.CancelPendingRequests
  - System.Net.Http.HttpClient.Dispose(System.Boolean)
  - System.Net.Http.HttpClient.DefaultRequestHeaders
  - System.Net.Http.HttpClient.BaseAddress
  - System.Net.Http.HttpClient.Timeout
  - System.Net.Http.HttpClient.MaxResponseContentBufferSize
  - System.Net.Http.HttpMessageInvoker.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.String,System.Exception)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper_HttpClient.Services.RestClient.AlwaysEnsureSuccessCode
  commentId: P:DotNetHelper_HttpClient.Services.RestClient.AlwaysEnsureSuccessCode
  id: AlwaysEnsureSuccessCode
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: AlwaysEnsureSuccessCode
  nameWithType: RestClient.AlwaysEnsureSuccessCode
  fullName: DotNetHelper_HttpClient.Services.RestClient.AlwaysEnsureSuccessCode
  type: Property
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: AlwaysEnsureSuccessCode
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 33
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nGets or sets a value indicating whether [always ensure success code].\n"
  example: []
  syntax:
    content: public bool AlwaysEnsureSuccessCode { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if [always ensure success code]; otherwise, <code>false</code>.
    content.vb: Public Property AlwaysEnsureSuccessCode As Boolean
  overload: DotNetHelper_HttpClient.Services.RestClient.AlwaysEnsureSuccessCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.HttpRequestExecuteAsync
  commentId: P:DotNetHelper_HttpClient.Services.RestClient.HttpRequestExecuteAsync
  id: HttpRequestExecuteAsync
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: HttpRequestExecuteAsync
  nameWithType: RestClient.HttpRequestExecuteAsync
  fullName: DotNetHelper_HttpClient.Services.RestClient.HttpRequestExecuteAsync
  type: Property
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: HttpRequestExecuteAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 39
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nA func that will return a httpresponsemessage this method is used to integrate with polly\n"
  example: []
  syntax:
    content: public Func<Task<HttpResponseMessage>> HttpRequestExecuteAsync { get; set; }
    parameters: []
    return:
      type: System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}}
    content.vb: Public Property HttpRequestExecuteAsync As Func(Of Task(Of HttpResponseMessage))
  overload: DotNetHelper_HttpClient.Services.RestClient.HttpRequestExecuteAsync*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  id: '#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)'
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: RestClient(HttpMessageHandler, Boolean)
  nameWithType: RestClient.RestClient(HttpMessageHandler, Boolean)
  fullName: DotNetHelper_HttpClient.Services.RestClient.RestClient(System.Net.Http.HttpMessageHandler, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: .ctor
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 42
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  syntax:
    content: public RestClient(HttpMessageHandler httpClientHandler, bool disposeHandler)
    parameters:
    - id: httpClientHandler
      type: System.Net.Http.HttpMessageHandler
    - id: disposeHandler
      type: System.Boolean
    content.vb: Public Sub New(httpClientHandler As HttpMessageHandler, disposeHandler As Boolean)
  overload: DotNetHelper_HttpClient.Services.RestClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.#ctor(System.Net.Http.HttpMessageHandler)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.#ctor(System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.Net.Http.HttpMessageHandler)'
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: RestClient(HttpMessageHandler)
  nameWithType: RestClient.RestClient(HttpMessageHandler)
  fullName: DotNetHelper_HttpClient.Services.RestClient.RestClient(System.Net.Http.HttpMessageHandler)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: .ctor
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 47
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  syntax:
    content: public RestClient(HttpMessageHandler httpClientHandler)
    parameters:
    - id: httpClientHandler
      type: System.Net.Http.HttpMessageHandler
    content.vb: Public Sub New(httpClientHandler As HttpMessageHandler)
  overload: DotNetHelper_HttpClient.Services.RestClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.#ctor
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.#ctor
  id: '#ctor'
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: RestClient()
  nameWithType: RestClient.RestClient()
  fullName: DotNetHelper_HttpClient.Services.RestClient.RestClient()
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: .ctor
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 52
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  syntax:
    content: public RestClient()
    content.vb: Public Sub New
  overload: DotNetHelper_HttpClient.Services.RestClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.GetStringAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetStringAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetStringAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetStringAsync(String, Method, HttpContent)
  nameWithType: RestClient.GetStringAsync(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetStringAsync(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetStringAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 127
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nexecute get response as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<string> GetStringAsync(string url, Method method, HttpContent content = null)
    parameters:
    - id: url
      type: System.String
      description: The url.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Task&lt;System.String>.
    content.vb: Public Function GetStringAsync(url As String, method As Method, content As HttpContent = Nothing) As Task(Of String)
  overload: DotNetHelper_HttpClient.Services.RestClient.GetStringAsync*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.GetStringAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.GetStringAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetStringAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetStringAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetStringAsync(String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.GetStringAsync(String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetStringAsync(System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetStringAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 141
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nexecute get response as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<string> GetStringAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Task&lt;System.String>.
    content.vb: Public Function GetStringAsync(baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As Task(Of String)
  overload: DotNetHelper_HttpClient.Services.RestClient.GetStringAsync*
  nameWithType.vb: RestClient.GetStringAsync(String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetStringAsync(System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetStringAsync(String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.GetString(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetString(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetString(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetString(String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.GetString(String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetString(System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetString
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 162
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nexecute get response as an synchronous operation.\n"
  example: []
  syntax:
    content: public string GetString(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.String
      description: Task&lt;System.String>.
    content.vb: Public Function GetString(baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As String
  overload: DotNetHelper_HttpClient.Services.RestClient.GetString*
  nameWithType.vb: RestClient.GetString(String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetString(System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetString(String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.GetString(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetString(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetString(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetString(String, Method, HttpContent)
  nameWithType: RestClient.GetString(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetString(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetString
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 174
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nexecute get response as an synchronous operation.\n"
  example: []
  syntax:
    content: public string GetString(string url, Method method, HttpContent content = null)
    parameters:
    - id: url
      type: System.String
      description: The baseurl.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.String
      description: Task&lt;System.String>.
    content.vb: Public Function GetString(url As String, method As Method, content As HttpContent = Nothing) As String
  overload: DotNetHelper_HttpClient.Services.RestClient.GetString*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.GetString(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetHttpResponseAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetHttpResponseAsync(String, Method, HttpContent)
  nameWithType: RestClient.GetHttpResponseAsync(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetHttpResponseAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 192
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get HTTP response as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<HttpResponseMessage> GetHttpResponseAsync(string url, Method method, HttpContent content = null)
    parameters:
    - id: url
      type: System.String
      description: The url.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: Task&lt;HttpResponseMessage>.
    content.vb: Public Function GetHttpResponseAsync(url As String, method As Method, content As HttpContent = Nothing) As Task(Of HttpResponseMessage)
  overload: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponseAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetHttpResponseAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetHttpResponseAsync(String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.GetHttpResponseAsync(String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync(System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetHttpResponseAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 206
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get HTTP response as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<HttpResponseMessage> GetHttpResponseAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: Task&lt;HttpResponseMessage>.
    content.vb: Public Function GetHttpResponseAsync(baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As Task(Of HttpResponseMessage)
  overload: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync*
  nameWithType.vb: RestClient.GetHttpResponseAsync(String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync(System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetHttpResponseAsync(String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetHttpResponse(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetHttpResponse(String, Method, HttpContent)
  nameWithType: RestClient.GetHttpResponse(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetHttpResponse
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 225
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get HTTP response as an synchronous operation.\n"
  example: []
  syntax:
    content: public HttpResponseMessage GetHttpResponse(string url, Method method, HttpContent content = null)
    parameters:
    - id: url
      type: System.String
      description: The baseurl.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: Task&lt;HttpResponseMessage>.
    content.vb: Public Function GetHttpResponse(url As String, method As Method, content As HttpContent = Nothing) As HttpResponseMessage
  overload: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponse(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetHttpResponse(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetHttpResponse(String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.GetHttpResponse(String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse(System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetHttpResponse
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 239
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get HTTP response as an synchronous operation.\n"
  example: []
  syntax:
    content: public HttpResponseMessage GetHttpResponse(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: Task&lt;HttpResponseMessage>.
    content.vb: Public Function GetHttpResponse(baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As HttpResponseMessage
  overload: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse*
  nameWithType.vb: RestClient.GetHttpResponse(String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse(System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetHttpResponse(String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetStreamAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetStreamAsync(String, Method, HttpContent)
  nameWithType: RestClient.GetStreamAsync(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetStreamAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 257
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get stream as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<Stream> GetStreamAsync(string url, Method method, HttpContent content = null)
    parameters:
    - id: url
      type: System.String
      description: The url.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Task&lt;Stream>.
    content.vb: Public Function GetStreamAsync(url As String, method As Method, content As HttpContent = Nothing) As Task(Of Stream)
  overload: DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.GetStreamAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetStreamAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetStreamAsync(String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.GetStreamAsync(String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync(System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetStreamAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 272
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get stream as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<Stream> GetStreamAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Task&lt;Stream>.
    content.vb: Public Function GetStreamAsync(baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As Task(Of Stream)
  overload: DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync*
  nameWithType.vb: RestClient.GetStreamAsync(String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync(System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetStreamAsync(String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.GetStream(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetStream(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetStream(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetStream(String, Method, HttpContent)
  nameWithType: RestClient.GetStream(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetStream(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetStream
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 297
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get stream as an synchronous operation.\n"
  example: []
  syntax:
    content: public Stream GetStream(string url, Method method, HttpContent content = null)
    parameters:
    - id: url
      type: System.String
      description: The baseurl.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.IO.Stream
      description: Task&lt;Stream>.
    content.vb: Public Function GetStream(url As String, method As Method, content As HttpContent = Nothing) As Stream
  overload: DotNetHelper_HttpClient.Services.RestClient.GetStream*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.GetStream(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.GetStream(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetStream(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetStream(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetStream(String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.GetStream(String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetStream(System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetStream
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 312
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get stream as an synchronous operation.\n"
  example: []
  syntax:
    content: public Stream GetStream(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.IO.Stream
      description: Task&lt;Stream>.
    content.vb: Public Function GetStream(baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As Stream
  overload: DotNetHelper_HttpClient.Services.RestClient.GetStream*
  nameWithType.vb: RestClient.GetStream(String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetStream(System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetStream(String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetBytesAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetBytesAsync(String, Method, HttpContent)
  nameWithType: RestClient.GetBytesAsync(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetBytesAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 329
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get bytes as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<byte[]> GetBytesAsync(string url, Method method, HttpContent content = null)
    parameters:
    - id: url
      type: System.String
      description: The baseurl.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: Task&lt;System.Byte[]>.
    content.vb: Public Function GetBytesAsync(url As String, method As Method, content As HttpContent = Nothing) As Task(Of Byte())
  overload: DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.GetBytesAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetBytesAsync(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetBytesAsync(String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.GetBytesAsync(String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync(System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetBytesAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 343
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get bytes as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<byte[]> GetBytesAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: Task&lt;System.Byte[]>.
    content.vb: Public Function GetBytesAsync(baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As Task(Of Byte())
  overload: DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync*
  nameWithType.vb: RestClient.GetBytesAsync(String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync(System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetBytesAsync(String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.GetBytes(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetBytes(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetBytes(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetBytes(String, Method, HttpContent)
  nameWithType: RestClient.GetBytes(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetBytes(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetBytes
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 366
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get bytes as an synchronous operation.\n"
  example: []
  syntax:
    content: public byte[] GetBytes(string url, Method method, HttpContent content = null)
    parameters:
    - id: url
      type: System.String
      description: The baseurl.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Byte[]
      description: Task&lt;System.Byte[]>.
    content.vb: Public Function GetBytes(url As String, method As Method, content As HttpContent = Nothing) As Byte()
  overload: DotNetHelper_HttpClient.Services.RestClient.GetBytes*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.GetBytes(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.GetBytes(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetBytes(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetBytes(System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetBytes(String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.GetBytes(String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetBytes(System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetBytes
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 381
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nExecute get bytes as an synchronous operation.\n"
  example: []
  syntax:
    content: public byte[] GetBytes(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    return:
      type: System.Byte[]
      description: Task&lt;System.Byte[]>.
    content.vb: Public Function GetBytes(baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As Byte()
  overload: DotNetHelper_HttpClient.Services.RestClient.GetBytes*
  nameWithType.vb: RestClient.GetBytes(String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetBytes(System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetBytes(String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetAsync<T>(Func<String, T>, String, Method, HttpContent)
  nameWithType: RestClient.GetAsync<T>(Func<String, T>, String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetAsync<T>(System.Func<System.String, T>, System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 400
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nexecute get type as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<T> GetAsync<T>(Func<string, T> deserializer, string url, Method method, HttpContent content = null)
    parameters:
    - id: deserializer
      type: System.Func{System.String,{T}}
      description: ''
    - id: url
      type: System.String
      description: The url.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: Task&lt;T>.
    content.vb: Public Function GetAsync(Of T)(deserializer As Func(Of String, T), url As String, method As Method, content As HttpContent = Nothing) As Task(Of T)
  overload: DotNetHelper_HttpClient.Services.RestClient.GetAsync*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,{T}},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  nameWithType.vb: RestClient.GetAsync(Of T)(Func(Of String, T), String, Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetAsync(Of T)(System.Func(Of System.String, T), System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetAsync(Of T)(Func(Of String, T), String, Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.GetAsync``1(System.Func{System.String,``0},System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.GetAsync``1(System.Func{System.String,``0},System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: GetAsync``1(System.Func{System.String,``0},System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: GetAsync<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.GetAsync<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetAsync<T>(System.Func<System.String, T>, System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: GetAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 416
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nexecute get type as an asynchronous operation.\n"
  example: []
  syntax:
    content: public Task<T> GetAsync<T>(Func<string, T> deserializer, string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: deserializer
      type: System.Func{System.String,{T}}
      description: ''
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: Task&lt;T>.
    content.vb: Public Function GetAsync(Of T)(deserializer As Func(Of String, T), baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As Task(Of T)
  overload: DotNetHelper_HttpClient.Services.RestClient.GetAsync*
  nameWithType.vb: RestClient.GetAsync(Of T)(Func(Of String, T), String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.GetAsync(Of T)(System.Func(Of System.String, T), System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetAsync(Of T)(Func(Of String, T), String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: Get<T>(Func<String, T>, String, Method, HttpContent)
  nameWithType: RestClient.Get<T>(Func<String, T>, String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.Get<T>(System.Func<System.String, T>, System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: Get
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 437
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nexecute get type as an synchronous operation.\n"
  example: []
  syntax:
    content: public T Get<T>(Func<string, T> deserializer, string url, Method method, HttpContent content = null)
    parameters:
    - id: deserializer
      type: System.Func{System.String,{T}}
      description: ''
    - id: url
      type: System.String
      description: The url.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: Task&lt;T>.
    content.vb: Public Function Get(Of T)(deserializer As Func(Of String, T), url As String, method As Method, content As HttpContent = Nothing) As T
  overload: DotNetHelper_HttpClient.Services.RestClient.Get*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,{T}},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  nameWithType.vb: RestClient.Get(Of T)(Func(Of String, T), String, Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.Get(Of T)(System.Func(Of System.String, T), System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: Get(Of T)(Func(Of String, T), String, Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.Get``1(System.Func{System.String,``0},System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.Get``1(System.Func{System.String,``0},System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  id: Get``1(System.Func{System.String,``0},System.String,System.String,System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter},DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: Get<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent)
  nameWithType: RestClient.Get<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Services.RestClient.Get<T>(System.Func<System.String, T>, System.String, System.String, System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: Get
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 453
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nexecute get type as an synchronous operation.\n"
  example: []
  syntax:
    content: public T Get<T>(Func<string, T> deserializer, string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null)
    parameters:
    - id: deserializer
      type: System.Func{System.String,{T}}
      description: ''
    - id: baseurl
      type: System.String
      description: The baseurl.
    - id: resource
      type: System.String
      description: The resource.
    - id: headers
      type: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
      description: The headers.
    - id: method
      type: DotNetHelper_HttpClient.Enum.Method
      description: The method.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content.
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: Task&lt;T>.
    content.vb: Public Function Get(Of T)(deserializer As Func(Of String, T), baseurl As String, resource As String, headers As List(Of Parameter), method As Method, content As HttpContent = Nothing) As T
  overload: DotNetHelper_HttpClient.Services.RestClient.Get*
  nameWithType.vb: RestClient.Get(Of T)(Func(Of String, T), String, String, List(Of Parameter), Method, HttpContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.Get(Of T)(System.Func(Of System.String, T), System.String, System.String, System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter), DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: Get(Of T)(Func(Of String, T), String, String, List(Of Parameter), Method, HttpContent)
- uid: DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync(System.String,System.IO.FileStream)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync(System.String,System.IO.FileStream)
  id: DownloadFileAsync(System.String,System.IO.FileStream)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: DownloadFileAsync(String, FileStream)
  nameWithType: RestClient.DownloadFileAsync(String, FileStream)
  fullName: DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync(System.String, System.IO.FileStream)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: DownloadFileAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 469
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nDownloads the file.\n"
  example: []
  syntax:
    content: public Task<bool> DownloadFileAsync(string url, FileStream fileStream)
    parameters:
    - id: url
      type: System.String
      description: The URL.
    - id: fileStream
      type: System.IO.FileStream
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if XXXX, <code>false</code> otherwise.
    content.vb: Public Function DownloadFileAsync(url As String, fileStream As FileStream) As Task(Of Boolean)
  overload: DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.DownloadFileAsync(System.String,System.IO.FileStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.DownloadFile(System.String,System.IO.FileStream)
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.DownloadFile(System.String,System.IO.FileStream)
  id: DownloadFile(System.String,System.IO.FileStream)
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: DownloadFile(String, FileStream)
  nameWithType: RestClient.DownloadFile(String, FileStream)
  fullName: DotNetHelper_HttpClient.Services.RestClient.DownloadFile(System.String, System.IO.FileStream)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: DownloadFile
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 487
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nDownloads the file.\n"
  example: []
  syntax:
    content: public void DownloadFile(string url, FileStream fileStream)
    parameters:
    - id: url
      type: System.String
      description: The URL.
    - id: fileStream
      type: System.IO.FileStream
      description: ''
    content.vb: Public Sub DownloadFile(url As String, fileStream As FileStream)
  overload: DotNetHelper_HttpClient.Services.RestClient.DownloadFile*
  implements:
  - DotNetHelper_HttpClient.Interface.IRestClient.DownloadFile(System.String,System.IO.FileStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync(System.String,System.IO.FileStream,System.IProgress{System.Double},System.Byte[])
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync(System.String,System.IO.FileStream,System.IProgress{System.Double},System.Byte[])
  id: DownloadFileAsync(System.String,System.IO.FileStream,System.IProgress{System.Double},System.Byte[])
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: DownloadFileAsync(String, FileStream, IProgress<Double>, Byte[])
  nameWithType: RestClient.DownloadFileAsync(String, FileStream, IProgress<Double>, Byte[])
  fullName: DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync(System.String, System.IO.FileStream, System.IProgress<System.Double>, System.Byte[])
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: DownloadFileAsync
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 501
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nDownloads file from url as an asynchronous operation. \n"
  example: []
  syntax:
    content: public Task DownloadFileAsync(string url, FileStream fileStream, IProgress<double> progress, byte[] buffer = null)
    parameters:
    - id: url
      type: System.String
      description: The URL.
    - id: fileStream
      type: System.IO.FileStream
      description: The filestream that content will be written to
    - id: progress
      type: System.IProgress{System.Double}
      description: The progress.
    - id: buffer
      type: System.Byte[]
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: Task&lt;System.Boolean>.
    content.vb: Public Function DownloadFileAsync(url As String, fileStream As FileStream, progress As IProgress(Of Double), buffer As Byte() = Nothing) As Task
  overload: DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync*
  nameWithType.vb: RestClient.DownloadFileAsync(String, FileStream, IProgress(Of Double), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync(System.String, System.IO.FileStream, System.IProgress(Of System.Double), System.Byte())
  name.vb: DownloadFileAsync(String, FileStream, IProgress(Of Double), Byte())
- uid: DotNetHelper_HttpClient.Services.RestClient.DownloadFile(System.String,System.IO.FileStream,System.IProgress{System.Double},System.Byte[])
  commentId: M:DotNetHelper_HttpClient.Services.RestClient.DownloadFile(System.String,System.IO.FileStream,System.IProgress{System.Double},System.Byte[])
  id: DownloadFile(System.String,System.IO.FileStream,System.IProgress{System.Double},System.Byte[])
  parent: DotNetHelper_HttpClient.Services.RestClient
  langs:
  - csharp
  - vb
  name: DownloadFile(String, FileStream, IProgress<Double>, Byte[])
  nameWithType: RestClient.DownloadFile(String, FileStream, IProgress<Double>, Byte[])
  fullName: DotNetHelper_HttpClient.Services.RestClient.DownloadFile(System.String, System.IO.FileStream, System.IProgress<System.Double>, System.Byte[])
  type: Method
  source:
    remote:
      path: src/DotNetHelper-HttpClient/Services/RestClient.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-HttpClient.git
    id: DownloadFile
    path: ../src/DotNetHelper-HttpClient/Services/RestClient.cs
    startLine: 538
  assemblies:
  - DotNetHelper-HttpClient
  namespace: DotNetHelper_HttpClient.Services
  summary: "\nDownloads file from url as an asynchronous operation.\n"
  example: []
  syntax:
    content: public void DownloadFile(string url, FileStream fileStream, IProgress<double> progress, byte[] buffer = null)
    parameters:
    - id: url
      type: System.String
      description: The URL.
    - id: fileStream
      type: System.IO.FileStream
      description: The filestream that content will be written to
    - id: progress
      type: System.IProgress{System.Double}
      description: The progress.
    - id: buffer
      type: System.Byte[]
      description: ''
    content.vb: Public Sub DownloadFile(url As String, fileStream As FileStream, progress As IProgress(Of Double), buffer As Byte() = Nothing)
  overload: DotNetHelper_HttpClient.Services.RestClient.DownloadFile*
  nameWithType.vb: RestClient.DownloadFile(String, FileStream, IProgress(Of Double), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_HttpClient.Services.RestClient.DownloadFile(System.String, System.IO.FileStream, System.IProgress(Of System.Double), System.Byte())
  name.vb: DownloadFile(String, FileStream, IProgress(Of Double), Byte())
references:
- uid: DotNetHelper_HttpClient.Services
  commentId: N:DotNetHelper_HttpClient.Services
  name: DotNetHelper_HttpClient.Services
  nameWithType: DotNetHelper_HttpClient.Services
  fullName: DotNetHelper_HttpClient.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Http.HttpMessageInvoker
  commentId: T:System.Net.Http.HttpMessageInvoker
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageInvoker
  nameWithType: HttpMessageInvoker
  fullName: System.Net.Http.HttpMessageInvoker
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: DotNetHelper_HttpClient.Interface.IRestClient
  commentId: T:DotNetHelper_HttpClient.Interface.IRestClient
  parent: DotNetHelper_HttpClient.Interface
  name: IRestClient
  nameWithType: IRestClient
  fullName: DotNetHelper_HttpClient.Interface.IRestClient
- uid: System.Net.Http.HttpClient.GetStringAsync(System.String)
  commentId: M:System.Net.Http.HttpClient.GetStringAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetStringAsync(String)
  nameWithType: HttpClient.GetStringAsync(String)
  fullName: System.Net.Http.HttpClient.GetStringAsync(System.String)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetStringAsync(System.String)
    name: GetStringAsync
    nameWithType: HttpClient.GetStringAsync
    fullName: System.Net.Http.HttpClient.GetStringAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetStringAsync(System.String)
    name: GetStringAsync
    nameWithType: HttpClient.GetStringAsync
    fullName: System.Net.Http.HttpClient.GetStringAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  commentId: M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetStringAsync(Uri)
  nameWithType: HttpClient.GetStringAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetStringAsync(System.Uri)
    name: GetStringAsync
    nameWithType: HttpClient.GetStringAsync
    fullName: System.Net.Http.HttpClient.GetStringAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetStringAsync(System.Uri)
    name: GetStringAsync
    nameWithType: HttpClient.GetStringAsync
    fullName: System.Net.Http.HttpClient.GetStringAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  commentId: M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetByteArrayAsync(String)
  nameWithType: HttpClient.GetByteArrayAsync(String)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
    name: GetByteArrayAsync
    nameWithType: HttpClient.GetByteArrayAsync
    fullName: System.Net.Http.HttpClient.GetByteArrayAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
    name: GetByteArrayAsync
    nameWithType: HttpClient.GetByteArrayAsync
    fullName: System.Net.Http.HttpClient.GetByteArrayAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  commentId: M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetByteArrayAsync(Uri)
  nameWithType: HttpClient.GetByteArrayAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
    name: GetByteArrayAsync
    nameWithType: HttpClient.GetByteArrayAsync
    fullName: System.Net.Http.HttpClient.GetByteArrayAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
    name: GetByteArrayAsync
    nameWithType: HttpClient.GetByteArrayAsync
    fullName: System.Net.Http.HttpClient.GetByteArrayAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.String)
  commentId: M:System.Net.Http.HttpClient.GetStreamAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetStreamAsync(String)
  nameWithType: HttpClient.GetStreamAsync(String)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(System.String)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetStreamAsync(System.String)
    name: GetStreamAsync
    nameWithType: HttpClient.GetStreamAsync
    fullName: System.Net.Http.HttpClient.GetStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetStreamAsync(System.String)
    name: GetStreamAsync
    nameWithType: HttpClient.GetStreamAsync
    fullName: System.Net.Http.HttpClient.GetStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  commentId: M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetStreamAsync(Uri)
  nameWithType: HttpClient.GetStreamAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
    name: GetStreamAsync
    nameWithType: HttpClient.GetStreamAsync
    fullName: System.Net.Http.HttpClient.GetStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
    name: GetStreamAsync
    nameWithType: HttpClient.GetStreamAsync
    fullName: System.Net.Http.HttpClient.GetStreamAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetAsync(System.String)
  commentId: M:System.Net.Http.HttpClient.GetAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetAsync(String)
  nameWithType: HttpClient.GetAsync(String)
  fullName: System.Net.Http.HttpClient.GetAsync(System.String)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetAsync(System.String)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetAsync(System.String)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri)
  commentId: M:System.Net.Http.HttpClient.GetAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetAsync(Uri)
  nameWithType: HttpClient.GetAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetAsync(System.Uri)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetAsync(System.Uri)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetAsync(System.Uri)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  commentId: M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetAsync(String, HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(String, HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(System.String, System.Net.Http.HttpCompletionOption)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  commentId: M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetAsync(Uri, HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(Uri, HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(System.Uri, System.Net.Http.HttpCompletionOption)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetAsync(String, CancellationToken)
  nameWithType: HttpClient.GetAsync(String, CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetAsync(Uri, CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri, CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(System.Uri, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetAsync(String, HttpCompletionOption, CancellationToken)
  nameWithType: HttpClient.GetAsync(String, HttpCompletionOption, CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(System.String, System.Net.Http.HttpCompletionOption, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: GetAsync(Uri, HttpCompletionOption, CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri, HttpCompletionOption, CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(System.Uri, System.Net.Http.HttpCompletionOption, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
    name: GetAsync
    nameWithType: HttpClient.GetAsync
    fullName: System.Net.Http.HttpClient.GetAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
  commentId: M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: PostAsync(String, HttpContent)
  nameWithType: HttpClient.PostAsync(String, HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(System.String, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
    name: PostAsync
    nameWithType: HttpClient.PostAsync
    fullName: System.Net.Http.HttpClient.PostAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
    name: PostAsync
    nameWithType: HttpClient.PostAsync
    fullName: System.Net.Http.HttpClient.PostAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
  commentId: M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: PostAsync(Uri, HttpContent)
  nameWithType: HttpClient.PostAsync(Uri, HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(System.Uri, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
    name: PostAsync
    nameWithType: HttpClient.PostAsync
    fullName: System.Net.Http.HttpClient.PostAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
    name: PostAsync
    nameWithType: HttpClient.PostAsync
    fullName: System.Net.Http.HttpClient.PostAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: PostAsync(String, HttpContent, CancellationToken)
  nameWithType: HttpClient.PostAsync(String, HttpContent, CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(System.String, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: HttpClient.PostAsync
    fullName: System.Net.Http.HttpClient.PostAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: HttpClient.PostAsync
    fullName: System.Net.Http.HttpClient.PostAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: PostAsync(Uri, HttpContent, CancellationToken)
  nameWithType: HttpClient.PostAsync(Uri, HttpContent, CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(System.Uri, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: HttpClient.PostAsync
    fullName: System.Net.Http.HttpClient.PostAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: HttpClient.PostAsync
    fullName: System.Net.Http.HttpClient.PostAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
  commentId: M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: PutAsync(String, HttpContent)
  nameWithType: HttpClient.PutAsync(String, HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(System.String, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
    name: PutAsync
    nameWithType: HttpClient.PutAsync
    fullName: System.Net.Http.HttpClient.PutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
    name: PutAsync
    nameWithType: HttpClient.PutAsync
    fullName: System.Net.Http.HttpClient.PutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
  commentId: M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: PutAsync(Uri, HttpContent)
  nameWithType: HttpClient.PutAsync(Uri, HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(System.Uri, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
    name: PutAsync
    nameWithType: HttpClient.PutAsync
    fullName: System.Net.Http.HttpClient.PutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
    name: PutAsync
    nameWithType: HttpClient.PutAsync
    fullName: System.Net.Http.HttpClient.PutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: PutAsync(String, HttpContent, CancellationToken)
  nameWithType: HttpClient.PutAsync(String, HttpContent, CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(System.String, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: HttpClient.PutAsync
    fullName: System.Net.Http.HttpClient.PutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: HttpClient.PutAsync
    fullName: System.Net.Http.HttpClient.PutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: PutAsync(Uri, HttpContent, CancellationToken)
  nameWithType: HttpClient.PutAsync(Uri, HttpContent, CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(System.Uri, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: HttpClient.PutAsync
    fullName: System.Net.Http.HttpClient.PutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: HttpClient.PutAsync
    fullName: System.Net.Http.HttpClient.PutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String)
  commentId: M:System.Net.Http.HttpClient.DeleteAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: DeleteAsync(String)
  nameWithType: HttpClient.DeleteAsync(String)
  fullName: System.Net.Http.HttpClient.DeleteAsync(System.String)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.DeleteAsync(System.String)
    name: DeleteAsync
    nameWithType: HttpClient.DeleteAsync
    fullName: System.Net.Http.HttpClient.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.DeleteAsync(System.String)
    name: DeleteAsync
    nameWithType: HttpClient.DeleteAsync
    fullName: System.Net.Http.HttpClient.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  commentId: M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: DeleteAsync(Uri)
  nameWithType: HttpClient.DeleteAsync(Uri)
  fullName: System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri)
    name: DeleteAsync
    nameWithType: HttpClient.DeleteAsync
    fullName: System.Net.Http.HttpClient.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri)
    name: DeleteAsync
    nameWithType: HttpClient.DeleteAsync
    fullName: System.Net.Http.HttpClient.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: DeleteAsync(String, CancellationToken)
  nameWithType: HttpClient.DeleteAsync(String, CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: HttpClient.DeleteAsync
    fullName: System.Net.Http.HttpClient.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: HttpClient.DeleteAsync
    fullName: System.Net.Http.HttpClient.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: DeleteAsync(Uri, CancellationToken)
  nameWithType: HttpClient.DeleteAsync(Uri, CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(System.Uri, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: HttpClient.DeleteAsync
    fullName: System.Net.Http.HttpClient.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: HttpClient.DeleteAsync
    fullName: System.Net.Http.HttpClient.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  commentId: M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: SendAsync(HttpRequestMessage)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage)
  fullName: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
    name: SendAsync
    nameWithType: HttpClient.SendAsync
    fullName: System.Net.Http.HttpClient.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
    name: SendAsync
    nameWithType: HttpClient.SendAsync
    fullName: System.Net.Http.HttpClient.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: HttpClient.SendAsync
    fullName: System.Net.Http.HttpClient.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: HttpClient.SendAsync
    fullName: System.Net.Http.HttpClient.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  commentId: M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: SendAsync(HttpRequestMessage, HttpCompletionOption)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage, HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpCompletionOption)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
    name: SendAsync
    nameWithType: HttpClient.SendAsync
    fullName: System.Net.Http.HttpClient.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
    name: SendAsync
    nameWithType: HttpClient.SendAsync
    fullName: System.Net.Http.HttpClient.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: SendAsync(HttpRequestMessage, HttpCompletionOption, CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage, HttpCompletionOption, CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpCompletionOption, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: HttpClient.SendAsync
    fullName: System.Net.Http.HttpClient.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: HttpClient.SendAsync
    fullName: System.Net.Http.HttpClient.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpCompletionOption
    name: HttpCompletionOption
    nameWithType: HttpCompletionOption
    fullName: System.Net.Http.HttpCompletionOption
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.CancelPendingRequests
  commentId: M:System.Net.Http.HttpClient.CancelPendingRequests
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: CancelPendingRequests()
  nameWithType: HttpClient.CancelPendingRequests()
  fullName: System.Net.Http.HttpClient.CancelPendingRequests()
  spec.csharp:
  - uid: System.Net.Http.HttpClient.CancelPendingRequests
    name: CancelPendingRequests
    nameWithType: HttpClient.CancelPendingRequests
    fullName: System.Net.Http.HttpClient.CancelPendingRequests
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.CancelPendingRequests
    name: CancelPendingRequests
    nameWithType: HttpClient.CancelPendingRequests
    fullName: System.Net.Http.HttpClient.CancelPendingRequests
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.Dispose(System.Boolean)
  commentId: M:System.Net.Http.HttpClient.Dispose(System.Boolean)
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: HttpClient.Dispose(Boolean)
  fullName: System.Net.Http.HttpClient.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.Dispose(System.Boolean)
    name: Dispose
    nameWithType: HttpClient.Dispose
    fullName: System.Net.Http.HttpClient.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.Dispose(System.Boolean)
    name: Dispose
    nameWithType: HttpClient.Dispose
    fullName: System.Net.Http.HttpClient.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient.DefaultRequestHeaders
  commentId: P:System.Net.Http.HttpClient.DefaultRequestHeaders
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: DefaultRequestHeaders
  nameWithType: HttpClient.DefaultRequestHeaders
  fullName: System.Net.Http.HttpClient.DefaultRequestHeaders
- uid: System.Net.Http.HttpClient.BaseAddress
  commentId: P:System.Net.Http.HttpClient.BaseAddress
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: BaseAddress
  nameWithType: HttpClient.BaseAddress
  fullName: System.Net.Http.HttpClient.BaseAddress
- uid: System.Net.Http.HttpClient.Timeout
  commentId: P:System.Net.Http.HttpClient.Timeout
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: Timeout
  nameWithType: HttpClient.Timeout
  fullName: System.Net.Http.HttpClient.Timeout
- uid: System.Net.Http.HttpClient.MaxResponseContentBufferSize
  commentId: P:System.Net.Http.HttpClient.MaxResponseContentBufferSize
  parent: System.Net.Http.HttpClient
  isExternal: true
  name: MaxResponseContentBufferSize
  nameWithType: HttpClient.MaxResponseContentBufferSize
  fullName: System.Net.Http.HttpClient.MaxResponseContentBufferSize
- uid: System.Net.Http.HttpMessageInvoker.Dispose
  commentId: M:System.Net.Http.HttpMessageInvoker.Dispose
  parent: System.Net.Http.HttpMessageInvoker
  isExternal: true
  name: Dispose()
  nameWithType: HttpMessageInvoker.Dispose()
  fullName: System.Net.Http.HttpMessageInvoker.Dispose()
  spec.csharp:
  - uid: System.Net.Http.HttpMessageInvoker.Dispose
    name: Dispose
    nameWithType: HttpMessageInvoker.Dispose
    fullName: System.Net.Http.HttpMessageInvoker.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageInvoker.Dispose
    name: Dispose
    nameWithType: HttpMessageInvoker.Dispose
    fullName: System.Net.Http.HttpMessageInvoker.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.String,System.Exception)
  commentId: M:DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.Object,System.String,System.Exception)
  parent: DotNetHelper_HttpClient.Extension.ObjectExtensions
  definition: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.Object,System.String,System.Exception)
  name: IsNullThrow(String, Exception)
  nameWithType: ObjectExtensions.IsNullThrow(String, Exception)
  fullName: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.String, System.Exception)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.String,System.Exception)
    name: IsNullThrow
    nameWithType: ObjectExtensions.IsNullThrow
    fullName: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.String,System.Exception)
    name: IsNullThrow
    nameWithType: ObjectExtensions.IsNullThrow
    fullName: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: DotNetHelper_HttpClient.Interface
  commentId: N:DotNetHelper_HttpClient.Interface
  name: DotNetHelper_HttpClient.Interface
  nameWithType: DotNetHelper_HttpClient.Interface
  fullName: DotNetHelper_HttpClient.Interface
- uid: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.Object,System.String,System.Exception)
  commentId: M:DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.Object,System.String,System.Exception)
  isExternal: true
  name: IsNullThrow(Object, String, Exception)
  nameWithType: ObjectExtensions.IsNullThrow(Object, String, Exception)
  fullName: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.Object, System.String, System.Exception)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.Object,System.String,System.Exception)
    name: IsNullThrow
    nameWithType: ObjectExtensions.IsNullThrow
    fullName: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow(System.Object,System.String,System.Exception)
    name: IsNullThrow
    nameWithType: ObjectExtensions.IsNullThrow
    fullName: DotNetHelper_HttpClient.Extension.ObjectExtensions.IsNullThrow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Extension.ObjectExtensions
  commentId: T:DotNetHelper_HttpClient.Extension.ObjectExtensions
  parent: DotNetHelper_HttpClient.Extension
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: DotNetHelper_HttpClient.Extension.ObjectExtensions
- uid: DotNetHelper_HttpClient.Extension
  commentId: N:DotNetHelper_HttpClient.Extension
  name: DotNetHelper_HttpClient.Extension
  nameWithType: DotNetHelper_HttpClient.Extension
  fullName: DotNetHelper_HttpClient.Extension
- uid: DotNetHelper_HttpClient.Services.RestClient.AlwaysEnsureSuccessCode*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.AlwaysEnsureSuccessCode
  name: AlwaysEnsureSuccessCode
  nameWithType: RestClient.AlwaysEnsureSuccessCode
  fullName: DotNetHelper_HttpClient.Services.RestClient.AlwaysEnsureSuccessCode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DotNetHelper_HttpClient.Services.RestClient.HttpRequestExecuteAsync*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.HttpRequestExecuteAsync
  name: HttpRequestExecuteAsync
  nameWithType: RestClient.HttpRequestExecuteAsync
  fullName: DotNetHelper_HttpClient.Services.RestClient.HttpRequestExecuteAsync
- uid: System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}}
  commentId: T:System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}}
  parent: System
  definition: System.Func`1
  name: Func<Task<HttpResponseMessage>>
  nameWithType: Func<Task<HttpResponseMessage>>
  fullName: System.Func<System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>>
  nameWithType.vb: Func(Of Task(Of HttpResponseMessage))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage))
  name.vb: Func(Of Task(Of HttpResponseMessage))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Services.RestClient.#ctor*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.#ctor
  name: RestClient
  nameWithType: RestClient.RestClient
  fullName: DotNetHelper_HttpClient.Services.RestClient.RestClient
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: DotNetHelper_HttpClient.Services.RestClient.GetStringAsync*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.GetStringAsync
  name: GetStringAsync
  nameWithType: RestClient.GetStringAsync
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetStringAsync
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetStringAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetStringAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: GetStringAsync(String, Method, HttpContent)
  nameWithType: IRestClient.GetStringAsync(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetStringAsync(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetStringAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetStringAsync
    nameWithType: IRestClient.GetStringAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetStringAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetStringAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetStringAsync
    nameWithType: IRestClient.GetStringAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetStringAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotNetHelper_HttpClient.Enum.Method
  commentId: T:DotNetHelper_HttpClient.Enum.Method
  parent: DotNetHelper_HttpClient.Enum
  name: Method
  nameWithType: Method
  fullName: DotNetHelper_HttpClient.Enum.Method
- uid: System.Net.Http.HttpContent
  commentId: T:System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: true
  name: HttpContent
  nameWithType: HttpContent
  fullName: System.Net.Http.HttpContent
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Enum
  commentId: N:DotNetHelper_HttpClient.Enum
  name: DotNetHelper_HttpClient.Enum
  nameWithType: DotNetHelper_HttpClient.Enum
  fullName: DotNetHelper_HttpClient.Enum
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
  commentId: T:System.Collections.Generic.List{DotNetHelper_HttpClient.Models.Parameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Parameter>
  nameWithType: List<Parameter>
  fullName: System.Collections.Generic.List<DotNetHelper_HttpClient.Models.Parameter>
  nameWithType.vb: List(Of Parameter)
  fullName.vb: System.Collections.Generic.List(Of DotNetHelper_HttpClient.Models.Parameter)
  name.vb: List(Of Parameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_HttpClient.Models.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: DotNetHelper_HttpClient.Models.Parameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_HttpClient.Models.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: DotNetHelper_HttpClient.Models.Parameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DotNetHelper_HttpClient.Services.RestClient.GetString*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.GetString
  name: GetString
  nameWithType: RestClient.GetString
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetString
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetString(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetString(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: GetString(String, Method, HttpContent)
  nameWithType: IRestClient.GetString(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetString(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetString(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetString
    nameWithType: IRestClient.GetString
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetString(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetString
    nameWithType: IRestClient.GetString
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync
  name: GetHttpResponseAsync
  nameWithType: RestClient.GetHttpResponseAsync
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponseAsync
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponseAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponseAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: GetHttpResponseAsync(String, Method, HttpContent)
  nameWithType: IRestClient.GetHttpResponseAsync(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponseAsync(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponseAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetHttpResponseAsync
    nameWithType: IRestClient.GetHttpResponseAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponseAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetHttpResponseAsync
    nameWithType: IRestClient.GetHttpResponseAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse
  name: GetHttpResponse
  nameWithType: RestClient.GetHttpResponse
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetHttpResponse
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponse(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponse(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: GetHttpResponse(String, Method, HttpContent)
  nameWithType: IRestClient.GetHttpResponse(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponse(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponse(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetHttpResponse
    nameWithType: IRestClient.GetHttpResponse
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponse(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetHttpResponse
    nameWithType: IRestClient.GetHttpResponse
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetHttpResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync
  name: GetStreamAsync
  nameWithType: RestClient.GetStreamAsync
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetStreamAsync
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetStreamAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetStreamAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: GetStreamAsync(String, Method, HttpContent)
  nameWithType: IRestClient.GetStreamAsync(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetStreamAsync(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetStreamAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetStreamAsync
    nameWithType: IRestClient.GetStreamAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetStreamAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetStreamAsync
    nameWithType: IRestClient.GetStreamAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Services.RestClient.GetStream*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.GetStream
  name: GetStream
  nameWithType: RestClient.GetStream
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetStream
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetStream(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetStream(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: GetStream(String, Method, HttpContent)
  nameWithType: IRestClient.GetStream(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetStream(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetStream(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetStream
    nameWithType: IRestClient.GetStream
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetStream(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetStream
    nameWithType: IRestClient.GetStream
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync
  name: GetBytesAsync
  nameWithType: RestClient.GetBytesAsync
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetBytesAsync
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetBytesAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetBytesAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: GetBytesAsync(String, Method, HttpContent)
  nameWithType: IRestClient.GetBytesAsync(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetBytesAsync(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetBytesAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetBytesAsync
    nameWithType: IRestClient.GetBytesAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetBytesAsync(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetBytesAsync
    nameWithType: IRestClient.GetBytesAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Services.RestClient.GetBytes*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.GetBytes
  name: GetBytes
  nameWithType: RestClient.GetBytes
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetBytes
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetBytes(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetBytes(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: GetBytes(String, Method, HttpContent)
  nameWithType: IRestClient.GetBytes(String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetBytes(System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetBytes(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetBytes
    nameWithType: IRestClient.GetBytes
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetBytes(System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetBytes
    nameWithType: IRestClient.GetBytes
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DotNetHelper_HttpClient.Services.RestClient.GetAsync*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.GetAsync
  name: GetAsync
  nameWithType: RestClient.GetAsync
  fullName: DotNetHelper_HttpClient.Services.RestClient.GetAsync
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,{T}},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  definition: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  name: GetAsync<T>(Func<String, T>, String, Method, HttpContent)
  nameWithType: IRestClient.GetAsync<T>(Func<String, T>, String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync<T>(System.Func<System.String, T>, System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  nameWithType.vb: IRestClient.GetAsync(Of T)(Func(Of String, T), String, Method, HttpContent)
  fullName.vb: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync(Of T)(System.Func(Of System.String, T), System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetAsync(Of T)(Func(Of String, T), String, Method, HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetAsync<T>
    nameWithType: IRestClient.GetAsync<T>
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetAsync(Of T)
    nameWithType: IRestClient.GetAsync(Of T)
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.String,{T}}
  commentId: T:System.Func{System.String,``0}
  parent: System
  definition: System.Func`2
  name: Func<String, T>
  nameWithType: Func<String, T>
  fullName: System.Func<System.String, T>
  nameWithType.vb: Func(Of String, T)
  fullName.vb: System.Func(Of System.String, T)
  name.vb: Func(Of String, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  isExternal: true
  name: GetAsync<T>(Func<String, T>, String, Method, HttpContent)
  nameWithType: IRestClient.GetAsync<T>(Func<String, T>, String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync<T>(System.Func<System.String, T>, System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  nameWithType.vb: IRestClient.GetAsync(Of T)(Func(Of String, T), String, Method, HttpContent)
  fullName.vb: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync(Of T)(System.Func(Of System.String, T), System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: GetAsync(Of T)(Func(Of String, T), String, Method, HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetAsync<T>
    nameWithType: IRestClient.GetAsync<T>
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: GetAsync(Of T)
    nameWithType: IRestClient.GetAsync(Of T)
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Services.RestClient.Get*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.Get
  name: Get
  nameWithType: RestClient.Get
  fullName: DotNetHelper_HttpClient.Services.RestClient.Get
- uid: DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,{T}},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  definition: DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  name: Get<T>(Func<String, T>, String, Method, HttpContent)
  nameWithType: IRestClient.Get<T>(Func<String, T>, String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.Get<T>(System.Func<System.String, T>, System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  nameWithType.vb: IRestClient.Get(Of T)(Func(Of String, T), String, Method, HttpContent)
  fullName.vb: DotNetHelper_HttpClient.Interface.IRestClient.Get(Of T)(System.Func(Of System.String, T), System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: Get(Of T)(Func(Of String, T), String, Method, HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: Get<T>
    nameWithType: IRestClient.Get<T>
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: Get(Of T)
    nameWithType: IRestClient.Get(Of T)
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
  isExternal: true
  name: Get<T>(Func<String, T>, String, Method, HttpContent)
  nameWithType: IRestClient.Get<T>(Func<String, T>, String, Method, HttpContent)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.Get<T>(System.Func<System.String, T>, System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  nameWithType.vb: IRestClient.Get(Of T)(Func(Of String, T), String, Method, HttpContent)
  fullName.vb: DotNetHelper_HttpClient.Interface.IRestClient.Get(Of T)(System.Func(Of System.String, T), System.String, DotNetHelper_HttpClient.Enum.Method, System.Net.Http.HttpContent)
  name.vb: Get(Of T)(Func(Of String, T), String, Method, HttpContent)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: Get<T>
    nameWithType: IRestClient.Get<T>
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.Get``1(System.Func{System.String,``0},System.String,DotNetHelper_HttpClient.Enum.Method,System.Net.Http.HttpContent)
    name: Get(Of T)
    nameWithType: IRestClient.Get(Of T)
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_HttpClient.Enum.Method
    name: Method
    nameWithType: Method
    fullName: DotNetHelper_HttpClient.Enum.Method
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: System.Net.Http.HttpContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync
  name: DownloadFileAsync
  nameWithType: RestClient.DownloadFileAsync
  fullName: DotNetHelper_HttpClient.Services.RestClient.DownloadFileAsync
- uid: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFileAsync(System.String,System.IO.FileStream)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.DownloadFileAsync(System.String,System.IO.FileStream)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: DownloadFileAsync(String, FileStream)
  nameWithType: IRestClient.DownloadFileAsync(String, FileStream)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFileAsync(System.String, System.IO.FileStream)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFileAsync(System.String,System.IO.FileStream)
    name: DownloadFileAsync
    nameWithType: IRestClient.DownloadFileAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.FileStream
    name: FileStream
    nameWithType: FileStream
    fullName: System.IO.FileStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFileAsync(System.String,System.IO.FileStream)
    name: DownloadFileAsync
    nameWithType: IRestClient.DownloadFileAsync
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.FileStream
    name: FileStream
    nameWithType: FileStream
    fullName: System.IO.FileStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.FileStream
  commentId: T:System.IO.FileStream
  parent: System.IO
  isExternal: true
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_HttpClient.Services.RestClient.DownloadFile*
  commentId: Overload:DotNetHelper_HttpClient.Services.RestClient.DownloadFile
  name: DownloadFile
  nameWithType: RestClient.DownloadFile
  fullName: DotNetHelper_HttpClient.Services.RestClient.DownloadFile
- uid: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFile(System.String,System.IO.FileStream)
  commentId: M:DotNetHelper_HttpClient.Interface.IRestClient.DownloadFile(System.String,System.IO.FileStream)
  parent: DotNetHelper_HttpClient.Interface.IRestClient
  isExternal: true
  name: DownloadFile(String, FileStream)
  nameWithType: IRestClient.DownloadFile(String, FileStream)
  fullName: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFile(System.String, System.IO.FileStream)
  spec.csharp:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFile(System.String,System.IO.FileStream)
    name: DownloadFile
    nameWithType: IRestClient.DownloadFile
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.FileStream
    name: FileStream
    nameWithType: FileStream
    fullName: System.IO.FileStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFile(System.String,System.IO.FileStream)
    name: DownloadFile
    nameWithType: IRestClient.DownloadFile
    fullName: DotNetHelper_HttpClient.Interface.IRestClient.DownloadFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.FileStream
    name: FileStream
    nameWithType: FileStream
    fullName: System.IO.FileStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IProgress{System.Double}
  commentId: T:System.IProgress{System.Double}
  parent: System
  definition: System.IProgress`1
  name: IProgress<Double>
  nameWithType: IProgress<Double>
  fullName: System.IProgress<System.Double>
  nameWithType.vb: IProgress(Of Double)
  fullName.vb: System.IProgress(Of System.Double)
  name.vb: IProgress(Of Double)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IProgress`1
  commentId: T:System.IProgress`1
  isExternal: true
  name: IProgress<T>
  nameWithType: IProgress<T>
  fullName: System.IProgress<T>
  nameWithType.vb: IProgress(Of T)
  fullName.vb: System.IProgress(Of T)
  name.vb: IProgress(Of T)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
