{
  "api/DotNetHelper_HttpClient.Helpers.HttpContentHelper.html": {
    "href": "api/DotNetHelper_HttpClient.Helpers.HttpContentHelper.html",
    "title": "Class HttpContentHelper | DotNetHelper-HttpClient",
    "keywords": "Class HttpContentHelper Inheritance Object HttpContentHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Helpers Assembly : DotNetHelper-HttpClient.dll Syntax public static class HttpContentHelper Methods | Improve this Doc View Source CreateByteArrayContent(String, String, Encoding) Creates the content of the HTTP. Declaration public static ByteArrayContent CreateByteArrayContent(string value, string mediaType, Encoding encoding) Parameters Type Name Description String value String mediaType Type of the media. Encoding encoding Returns Type Description ByteArrayContent HttpContent. | Improve this Doc View Source CreateStringContent(String) Creates the content of the HTTP. Declaration public static StringContent CreateStringContent(string value) Parameters Type Name Description String value Returns Type Description StringContent HttpContent. | Improve this Doc View Source CreateStringContent(String, String, Encoding) Creates the content of the HTTP. Declaration public static StringContent CreateStringContent(string value, string mediaType, Encoding encoding) Parameters Type Name Description String value String mediaType Type of the media. Encoding encoding Returns Type Description StringContent HttpContent."
  },
  "tutorials/GenerateSql/datatable2sql.html": {
    "href": "tutorials/GenerateSql/datatable2sql.html",
    "title": "SAMPLE ARTICLE | DotNetHelper-HttpClient",
    "keywords": "SAMPLE ARTICLE"
  },
  "api/DotNetHelper_HttpClient.Interface.IRestfulClient.html": {
    "href": "api/DotNetHelper_HttpClient.Interface.IRestfulClient.html",
    "title": "Interface IRestfulClient | DotNetHelper-HttpClient",
    "keywords": "Interface IRestfulClient Namespace : DotNetHelper_HttpClient.Interface Assembly : DotNetHelper-HttpClient.dll Syntax public interface IRestfulClient Methods | Improve this Doc View Source ExecuteGetBytes(String, String, List<Parameter>, Method, HttpContent) Executes the get bytes. Declaration byte[] ExecuteGetBytes(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Byte [] System.Byte[]. | Improve this Doc View Source ExecuteGetBytesAsync(String, String, List<Parameter>, Method, HttpContent) Execute get bytes as an asynchronous operation. Declaration Task<byte[]> ExecuteGetBytesAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < Byte []> Task<System.Byte[]>. | Improve this Doc View Source ExecuteGetHttpResponse(String, String, List<Parameter>, Method, HttpContent) Executes the get HTTP response. Declaration HttpResponseMessage ExecuteGetHttpResponse(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description HttpResponseMessage HttpResponseMessage. | Improve this Doc View Source ExecuteGetHttpResponseAsync(String, String, List<Parameter>, Method, HttpContent) Execute get HTTP response as an asynchronous operation. Declaration Task<HttpResponseMessage> ExecuteGetHttpResponseAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < HttpResponseMessage > Task<HttpResponseMessage>. | Improve this Doc View Source ExecuteGetResponse(String, String, List<Parameter>, Method, HttpContent) Executes the get response. Declaration string ExecuteGetResponse(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description String System.String. | Improve this Doc View Source ExecuteGetResponseAsync(String, String, List<Parameter>, Method, HttpContent) execute get response as an asynchronous operation. Declaration Task<string> ExecuteGetResponseAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < String > Task<System.String>. | Improve this Doc View Source ExecuteGetStream(String, String, List<Parameter>, Method, HttpContent) Executes the get stream. Declaration Stream ExecuteGetStream(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Stream Stream. | Improve this Doc View Source ExecuteGetStreamAsync(String, String, List<Parameter>, Method, HttpContent) Execute get stream as an asynchronous operation. Declaration Task<Stream> ExecuteGetStreamAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < Stream > Task<Stream>. | Improve this Doc View Source ExecuteGetType<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent) Executes the type of the get. Declaration T ExecuteGetType<T>(Func<string, T> deserializer, string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description T T. Type Parameters Name Description T | Improve this Doc View Source ExecuteGetTypeAsync<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent) execute get type as an asynchronous operation. Declaration Task<T> ExecuteGetTypeAsync<T>(Func<string, T> deserializer, string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task <T> Task<T>. Type Parameters Name Description T Extension Methods ObjectExtensions.IsNullThrow(Object, String, Exception)"
  },
  "tutorials/Attributes/attribute.html": {
    "href": "tutorials/Attributes/attribute.html",
    "title": "Custom Attributes | DotNetHelper-HttpClient",
    "keywords": "Custom Attributes In the secnarios where you need to build Update,Delete, or Upsert Statements. Attributes are use to generate the where clause. This library has its own custom attributes and can also work with the common DataAnnotation attributes. With the support of DataAnnotation this means this library could be paired with your favorite orm like Dapper or Enitity Framework Mark a property as an identity fields. [SqlColumn(SetIsIdentityKey = true)] OR [DatabaseGenerated(DatabaseGeneratedOption.Identity)] Mark a property as a key field. [SqlColumn(SetIsIdentityKey = true)] OR [DatabaseGenerated(DatabaseGeneratedOption.Identity)] <!-- #### Storing Columns As CSV, XML, & JSON ```csharp [SqlColumn(SerializableType = SerializableType.Json)] or [SqlColumn(SerializableType = SerializableType.Xml)] or [SqlColumn(SerializableType = SerializableType.Csv)] ``` -->"
  },
  "api/DotNetHelper_HttpClient.Extension.StringExtension.html": {
    "href": "api/DotNetHelper_HttpClient.Extension.StringExtension.html",
    "title": "Class StringExtension | DotNetHelper-HttpClient",
    "keywords": "Class StringExtension Inheritance Object StringExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Extension Assembly : DotNetHelper-HttpClient.dll Syntax public static class StringExtension Methods | Improve this Doc View Source ReplaceLastOccurrence(String, String, String, StringComparison) Declaration public static string ReplaceLastOccurrence(this string source, string find, string replace, StringComparison comparison) Parameters Type Name Description String source String find String replace StringComparison comparison Returns Type Description String"
  },
  "tutorials/GenerateSql/object2sql.html": {
    "href": "tutorials/GenerateSql/object2sql.html",
    "title": "SAMPLE ARTICLE | DotNetHelper-HttpClient",
    "keywords": "SAMPLE ARTICLE"
  },
  "api/DotNetHelper_HttpClient.Extension.ObjectExtensions.html": {
    "href": "api/DotNetHelper_HttpClient.Extension.ObjectExtensions.html",
    "title": "Class ObjectExtensions | DotNetHelper-HttpClient",
    "keywords": "Class ObjectExtensions Inheritance Object ObjectExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Extension Assembly : DotNetHelper-HttpClient.dll Syntax public static class ObjectExtensions Methods | Improve this Doc View Source IsNullThrow(Object, String, Exception) Declaration public static void IsNullThrow(this object obj, string name, Exception error = null) Parameters Type Name Description Object obj String name Exception error"
  },
  "tutorials/index.html": {
    "href": "tutorials/index.html",
    "title": "THIS IS THE HOME PAGE TO TUTORIALS | DotNetHelper-HttpClient",
    "keywords": "THIS IS THE HOME PAGE TO TUTORIALS"
  },
  "api/DotNetHelper_HttpClient.Extension.html": {
    "href": "api/DotNetHelper_HttpClient.Extension.html",
    "title": "Namespace DotNetHelper_HttpClient.Extension | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Extension Classes MethodExtension ObjectExtensions StringExtension"
  },
  "api/DotNetHelper_HttpClient.Helpers.URLHelper.html": {
    "href": "api/DotNetHelper_HttpClient.Helpers.URLHelper.html",
    "title": "Class URLHelper | DotNetHelper-HttpClient",
    "keywords": "Class URLHelper Inheritance Object URLHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Helpers Assembly : DotNetHelper-HttpClient.dll Syntax public static class URLHelper Methods | Improve this Doc View Source CreateUrl(String, String, List<Parameter>) Combines the baseurl with the endpoint and apply any url paramters to create a full address Declaration public static string CreateUrl(string baseurl, string resource, List<Parameter> headers) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Returns Type Description String System.String. | Improve this Doc View Source UrlEncode(String) URLs the encode. Declaration public static string UrlEncode(string value) Parameters Type Name Description String value The value. Returns Type Description String System.String. | Improve this Doc View Source UrlEscape(String) URLs the encode. Declaration public static string UrlEscape(string value) Parameters Type Name Description String value The value. Returns Type Description String System.String."
  },
  "api/DotNetHelper_HttpClient.Interface.html": {
    "href": "api/DotNetHelper_HttpClient.Interface.html",
    "title": "Namespace DotNetHelper_HttpClient.Interface | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Interface Interfaces IRestfulClient"
  },
  "api/DotNetHelper_HttpClient.Enum.Method.html": {
    "href": "api/DotNetHelper_HttpClient.Enum.Method.html",
    "title": "Enum Method | DotNetHelper-HttpClient",
    "keywords": "Enum Method HTTP method to use when making requests Namespace : DotNetHelper_HttpClient.Enum Assembly : DotNetHelper-HttpClient.dll Syntax public enum Method Fields Name Description Delete The delete Get The get Head Option Post The post Put The put Trace Extension Methods MethodExtension.MapToHttpMethod() ObjectExtensions.IsNullThrow(String, Exception)"
  },
  "api/DotNetHelper_HttpClient.Extension.MethodExtension.html": {
    "href": "api/DotNetHelper_HttpClient.Extension.MethodExtension.html",
    "title": "Class MethodExtension | DotNetHelper-HttpClient",
    "keywords": "Class MethodExtension Inheritance Object MethodExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Extension Assembly : DotNetHelper-HttpClient.dll Syntax public static class MethodExtension Methods | Improve this Doc View Source MapToHttpMethod(Method) Declaration public static HttpMethod MapToHttpMethod(this Method method) Parameters Type Name Description Method method Returns Type Description HttpMethod"
  },
  "api/DotNetHelper_HttpClient.Helpers.html": {
    "href": "api/DotNetHelper_HttpClient.Helpers.html",
    "title": "Namespace DotNetHelper_HttpClient.Helpers | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Helpers Classes HttpContentHelper URLHelper"
  },
  "api/DotNetHelper_HttpClient.Services.HttpRestfulClient.html": {
    "href": "api/DotNetHelper_HttpClient.Services.HttpRestfulClient.html",
    "title": "Class HttpRestfulClient | DotNetHelper-HttpClient",
    "keywords": "Class HttpRestfulClient Inheritance Object HttpRestfulClient Implements IRestfulClient Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Services Assembly : DotNetHelper-HttpClient.dll Syntax public class HttpRestfulClient : IRestfulClient Constructors | Improve this Doc View Source HttpRestfulClient() Declaration public HttpRestfulClient() | Improve this Doc View Source HttpRestfulClient(Encoding) Declaration public HttpRestfulClient(Encoding encoding) Parameters Type Name Description Encoding encoding Properties | Improve this Doc View Source AlwaysEnsureSuccessCode Gets or sets a value indicating whether [always ensure success code]. Declaration public bool AlwaysEnsureSuccessCode { get; set; } Property Value Type Description Boolean true if [always ensure success code]; otherwise, false . | Improve this Doc View Source Client Declaration public HttpClient Client { get; } Property Value Type Description HttpClient | Improve this Doc View Source DefaultTimeout Gets or sets the default timeout. Declaration public TimeSpan DefaultTimeout { get; set; } Property Value Type Description TimeSpan The default timeout. | Improve this Doc View Source Encoding Gets or sets the encoding. Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding The encoding. | Improve this Doc View Source Handler Gets or sets the handler. Declaration public HttpClientHandler Handler { get; set; } Property Value Type Description HttpClientHandler The handler. | Improve this Doc View Source HttpRequestExecuteAsync A func that will return a httpresponsemessage this method is used to integrate with polly Declaration public Func<Task<HttpResponseMessage>> HttpRequestExecuteAsync { get; set; } Property Value Type Description Func < Task < HttpResponseMessage >> Methods | Improve this Doc View Source DownloadFile(String, FileStream, IProgress<Double>, Byte[]) Downloads file from url as an asynchronous operation. Declaration public bool DownloadFile(string url, FileStream fileStream, IProgress<double> progress, byte[] buffer = null) Parameters Type Name Description String url The URL. FileStream fileStream The filestream that content will be written to IProgress < Double > progress The progress. Byte [] buffer Returns Type Description Boolean Task<System.Boolean>. | Improve this Doc View Source DownloadFileAsync(String, FileStream) Downloads the file. Declaration public Task<bool> DownloadFileAsync(string url, FileStream fileStream) Parameters Type Name Description String url The URL. FileStream fileStream Returns Type Description Task < Boolean > true if XXXX, false otherwise. | Improve this Doc View Source DownloadFileAsync(String, FileStream, IProgress<Double>, Byte[]) Downloads file from url as an asynchronous operation. Declaration public Task<bool> DownloadFileAsync(string url, FileStream fileStream, IProgress<double> progress, byte[] buffer = null) Parameters Type Name Description String url The URL. FileStream fileStream The filestream that content will be written to IProgress < Double > progress The progress. Byte [] buffer Returns Type Description Task < Boolean > Task<System.Boolean>. | Improve this Doc View Source ExecuteGetBytes(String, String, List<Parameter>, Method, HttpContent) Execute get bytes as an asynchronous operation. Declaration public byte[] ExecuteGetBytes(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Byte [] Task<System.Byte[]>. | Improve this Doc View Source ExecuteGetBytesAsync(String, String, List<Parameter>, Method, HttpContent) Execute get bytes as an asynchronous operation. Declaration public Task<byte[]> ExecuteGetBytesAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < Byte []> Task<System.Byte[]>. | Improve this Doc View Source ExecuteGetHttpResponse(String, String, List<Parameter>, Method, HttpContent) Execute get HTTP response as an asynchronous operation. Declaration public HttpResponseMessage ExecuteGetHttpResponse(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description HttpResponseMessage Task<HttpResponseMessage>. | Improve this Doc View Source ExecuteGetHttpResponseAsync(String, String, List<Parameter>, Method, HttpContent) Execute get HTTP response as an asynchronous operation. Declaration public Task<HttpResponseMessage> ExecuteGetHttpResponseAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < HttpResponseMessage > Task<HttpResponseMessage>. | Improve this Doc View Source ExecuteGetResponse(String, String, List<Parameter>, Method, HttpContent) execute get response as an asynchronous operation. Declaration public string ExecuteGetResponse(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description String Task<System.String>. | Improve this Doc View Source ExecuteGetResponseAsync(String, String, List<Parameter>, Method, HttpContent) execute get response as an asynchronous operation. Declaration public Task<string> ExecuteGetResponseAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < String > Task<System.String>. | Improve this Doc View Source ExecuteGetStream(String, String, List<Parameter>, Method, HttpContent) Execute get stream as an asynchronous operation. Declaration public Stream ExecuteGetStream(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Stream Task<Stream>. | Improve this Doc View Source ExecuteGetStreamAsync(String, String, List<Parameter>, Method, HttpContent) Execute get stream as an asynchronous operation. Declaration public Task<Stream> ExecuteGetStreamAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < Stream > Task<Stream>. | Improve this Doc View Source ExecuteGetType<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent) execute get type as an asynchronous operation. Declaration public T ExecuteGetType<T>(Func<string, T> deserializer, string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description T Task<T>. Type Parameters Name Description T | Improve this Doc View Source ExecuteGetTypeAsync<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent) execute get type as an asynchronous operation. Declaration public Task<T> ExecuteGetTypeAsync<T>(Func<string, T> deserializer, string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task <T> Task<T>. Type Parameters Name Description T | Improve this Doc View Source ExecuteGetXmlDocument(String, String, List<Parameter>, Method, HttpContent) Executes the get XML document. Declaration public XmlDocument ExecuteGetXmlDocument(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description XmlDocument XmlDocument. | Improve this Doc View Source ExecuteGetXmlDocumentAsync(String, String, List<Parameter>, Method, HttpContent) Executes the get XML document. Declaration public Task<XmlDocument> ExecuteGetXmlDocumentAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < XmlDocument > XmlDocument. | Improve this Doc View Source ReInitialize(HttpClientHandler, Boolean) Declaration public void ReInitialize(HttpClientHandler handle, bool reuseHandler) Parameters Type Name Description HttpClientHandler handle Boolean reuseHandler Implements IRestfulClient Extension Methods ObjectExtensions.IsNullThrow(Object, String, Exception)"
  },
  "api/DotNetHelper_HttpClient.Models.Parameter.html": {
    "href": "api/DotNetHelper_HttpClient.Models.Parameter.html",
    "title": "Class Parameter | DotNetHelper-HttpClient",
    "keywords": "Class Parameter Parameter container for REST requests Inheritance Object Parameter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Models Assembly : DotNetHelper-HttpClient.dll Syntax public class Parameter Constructors | Improve this Doc View Source Parameter(ParameterType) Declaration public Parameter(ParameterType type) Parameters Type Name Description ParameterType type Properties | Improve this Doc View Source ContentType MIME content type of the parameter Declaration public string ContentType { get; set; } Property Value Type Description String The type of the content. | Improve this Doc View Source EscapeValue Declaration public bool EscapeValue { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Name of the parameter Declaration public string Name { get; set; } Property Value Type Description String The name. | Improve this Doc View Source Type Type of the parameter Declaration public ParameterType Type { get; set; } Property Value Type Description ParameterType The type. | Improve this Doc View Source Value Value of the parameter Declaration public object Value { get; set; } Property Value Type Description Object The value. Methods | Improve this Doc View Source ToString() Return a human-readable representation of this parameter Declaration public override string ToString() Returns Type Description String String Overrides Object.ToString() Extension Methods ObjectExtensions.IsNullThrow(Object, String, Exception)"
  },
  "api/DotNetHelper_HttpClient.Models.html": {
    "href": "api/DotNetHelper_HttpClient.Models.html",
    "title": "Namespace DotNetHelper_HttpClient.Models | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Models Classes Parameter Parameter container for REST requests"
  },
  "api/DotNetHelper_HttpClient.Enum.ParameterType.html": {
    "href": "api/DotNetHelper_HttpClient.Enum.ParameterType.html",
    "title": "Enum ParameterType | DotNetHelper-HttpClient",
    "keywords": "Enum ParameterType Types of parameters that can be added to requests Namespace : DotNetHelper_HttpClient.Enum Assembly : DotNetHelper-HttpClient.dll Syntax public enum ParameterType Fields Name Description Cookie The cookie HttpHeader The get or post QueryString The request body Extension Methods ObjectExtensions.IsNullThrow(String, Exception)"
  },
  "api/DotNetHelper_HttpClient.Services.html": {
    "href": "api/DotNetHelper_HttpClient.Services.html",
    "title": "Namespace DotNetHelper_HttpClient.Services | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Services Classes HttpRestfulClient"
  },
  "api/DotNetHelper_HttpClient.Enum.html": {
    "href": "api/DotNetHelper_HttpClient.Enum.html",
    "title": "Namespace DotNetHelper_HttpClient.Enum | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Enum Enums Method HTTP method to use when making requests ParameterType Types of parameters that can be added to requests"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper-HttpClient | DotNetHelper-HttpClient",
    "keywords": "DotNetHelper-HttpClient DotNetHelper-HttpClient takes your generic types or dynamic & anonymous objects and convert it to sql. || View on Github || Features INSERT UPDATE DELETE UPSERT INSERT with OUTPUT Columns UPDATE with OUTPUT Columns DELETE with OUTPUT Columns UPSERT with OUTPUT Columns Supported Databases SQLSERVER SQLITE MYSQL More to come How to use How to Use With Generics Types public class Employee { public FirstName { get; set; } public LastName { get; set; } } var sqlServerObjectToSql = new ObjectToSql(DataBaseType.SqlServer); var insertSql = sqlServerObjectToSql.BuildQuery<Employee>(\"TABLE NAME OR DEFAULT TO TYPE NAME\", ActionType.Insert); // OR var insertSql = sqlServerObjectToSql.BuildQuery(\"TABLE NAME OR DEFAULT TO TYPE NAME\", ActionType.Insert,typeof(Employee)); How to Use With Dynamic Objects var sqlServerObjectToSql = new ObjectToSql(DataBaseType.SqlServer); dynamic record = new ExpandoObject(); record.FirstName = \"John\"; record.LastName = \"Doe\"; var insertSql = sqlServerObjectToSql.BuildQuery(\"TABLE NAME OR DEFAULT TO TYPE NAME\", ActionType.Insert,record); How to Use With Anonymous Objects var sqlServerObjectToSql = new ObjectToSql(DataBaseType.SqlServer); var anonymousObject = new { FirstName = \"John\" , LastName = \"Doe\"} var insertSql = sqlServerObjectToSql.BuildQuery(\"TABLE NAME OR DEFAULT TO TYPE NAME\", ActionType.Insert,anonymousObject); Output INSERT INTO TableNameGoHere ([FirstName],[LastName]) VALUES (@FirstName,@LastName) <!-- Links. --> <!-- Documentation Links. -->"
  }
}