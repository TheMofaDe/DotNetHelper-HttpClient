{
  "api/DotNetHelper_HttpClient.Enum.ParameterType.html": {
    "href": "api/DotNetHelper_HttpClient.Enum.ParameterType.html",
    "title": "Enum ParameterType | DotNetHelper-HttpClient",
    "keywords": "Enum ParameterType Types of parameters that can be added to requests Namespace : DotNetHelper_HttpClient.Enum Assembly : DotNetHelper-HttpClient.dll Syntax public enum ParameterType Fields Name Description Cookie The cookie HttpHeader The get or post QueryString The request body Extension Methods ObjectExtensions.IsNullThrow(String, Exception)"
  },
  "api/DotNetHelper_HttpClient.Models.Parameter.html": {
    "href": "api/DotNetHelper_HttpClient.Models.Parameter.html",
    "title": "Class Parameter | DotNetHelper-HttpClient",
    "keywords": "Class Parameter Parameter container for REST requests Inheritance Object Parameter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Models Assembly : DotNetHelper-HttpClient.dll Syntax public class Parameter Constructors | Improve this Doc View Source Parameter(ParameterType) Declaration public Parameter(ParameterType type) Parameters Type Name Description ParameterType type Properties | Improve this Doc View Source ContentType MIME content type of the parameter Declaration public string ContentType { get; set; } Property Value Type Description String The type of the content. | Improve this Doc View Source EscapeValue Declaration public bool EscapeValue { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Name of the parameter Declaration public string Name { get; set; } Property Value Type Description String The name. | Improve this Doc View Source Type Type of the parameter Declaration public ParameterType Type { get; set; } Property Value Type Description ParameterType The type. | Improve this Doc View Source Value Value of the parameter Declaration public object Value { get; set; } Property Value Type Description Object The value. Methods | Improve this Doc View Source ToString() Return a human-readable representation of this parameter Declaration public override string ToString() Returns Type Description String String Overrides Object.ToString() Extension Methods ObjectExtensions.IsNullThrow(Object, String, Exception)"
  },
  "api/DotNetHelper_HttpClient.Models.html": {
    "href": "api/DotNetHelper_HttpClient.Models.html",
    "title": "Namespace DotNetHelper_HttpClient.Models | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Models Classes Parameter Parameter container for REST requests"
  },
  "tutorials/Attributes/attribute.html": {
    "href": "tutorials/Attributes/attribute.html",
    "title": "Custom Attributes | DotNetHelper-HttpClient",
    "keywords": "Custom Attributes In the secnarios where you need to build Update,Delete, or Upsert Statements. Attributes are use to generate the where clause. This library has its own custom attributes and can also work with the common DataAnnotation attributes. With the support of DataAnnotation this means this library could be paired with your favorite orm like Dapper or Enitity Framework Mark a property as an identity fields. [SqlColumn(SetIsIdentityKey = true)] OR [DatabaseGenerated(DatabaseGeneratedOption.Identity)] Mark a property as a key field. [SqlColumn(SetIsIdentityKey = true)] OR [DatabaseGenerated(DatabaseGeneratedOption.Identity)] <!-- #### Storing Columns As CSV, XML, & JSON ```csharp [SqlColumn(SerializableType = SerializableType.Json)] or [SqlColumn(SerializableType = SerializableType.Xml)] or [SqlColumn(SerializableType = SerializableType.Csv)] ``` -->"
  },
  "tutorials/index.html": {
    "href": "tutorials/index.html",
    "title": "THIS IS THE HOME PAGE TO TUTORIALS | DotNetHelper-HttpClient",
    "keywords": "THIS IS THE HOME PAGE TO TUTORIALS"
  },
  "api/DotNetHelper_HttpClient.Enum.Method.html": {
    "href": "api/DotNetHelper_HttpClient.Enum.Method.html",
    "title": "Enum Method | DotNetHelper-HttpClient",
    "keywords": "Enum Method HTTP method to use when making requests Namespace : DotNetHelper_HttpClient.Enum Assembly : DotNetHelper-HttpClient.dll Syntax public enum Method Fields Name Description Delete The delete Get The get Head Option Post The post Put The put Trace Extension Methods MethodExtension.MapToHttpMethod() ObjectExtensions.IsNullThrow(String, Exception)"
  },
  "tutorials/GenerateSql/object2sql.html": {
    "href": "tutorials/GenerateSql/object2sql.html",
    "title": "SAMPLE ARTICLE | DotNetHelper-HttpClient",
    "keywords": "SAMPLE ARTICLE"
  },
  "api/DotNetHelper_HttpClient.Services.html": {
    "href": "api/DotNetHelper_HttpClient.Services.html",
    "title": "Namespace DotNetHelper_HttpClient.Services | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Services Classes RestClient"
  },
  "api/DotNetHelper_HttpClient.Interface.html": {
    "href": "api/DotNetHelper_HttpClient.Interface.html",
    "title": "Namespace DotNetHelper_HttpClient.Interface | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Interface Interfaces IRestClient"
  },
  "api/DotNetHelper_HttpClient.Extension.html": {
    "href": "api/DotNetHelper_HttpClient.Extension.html",
    "title": "Namespace DotNetHelper_HttpClient.Extension | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Extension Classes MethodExtension ObjectExtensions StringExtension"
  },
  "api/DotNetHelper_HttpClient.Enum.html": {
    "href": "api/DotNetHelper_HttpClient.Enum.html",
    "title": "Namespace DotNetHelper_HttpClient.Enum | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Enum Enums Method HTTP method to use when making requests ParameterType Types of parameters that can be added to requests"
  },
  "api/DotNetHelper_HttpClient.Helpers.HttpContentHelper.html": {
    "href": "api/DotNetHelper_HttpClient.Helpers.HttpContentHelper.html",
    "title": "Class HttpContentHelper | DotNetHelper-HttpClient",
    "keywords": "Class HttpContentHelper Inheritance Object HttpContentHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Helpers Assembly : DotNetHelper-HttpClient.dll Syntax public static class HttpContentHelper Methods | Improve this Doc View Source CreateByteArrayContent(String, String, Encoding) Creates the content of the HTTP. Declaration public static ByteArrayContent CreateByteArrayContent(string value, string mediaType, Encoding encoding) Parameters Type Name Description String value String mediaType Type of the media. Encoding encoding Returns Type Description ByteArrayContent HttpContent. | Improve this Doc View Source CreateStringContent(String) Creates the content of the HTTP. Declaration public static StringContent CreateStringContent(string value) Parameters Type Name Description String value Returns Type Description StringContent HttpContent. | Improve this Doc View Source CreateStringContent(String, String, Encoding) Creates the content of the HTTP. Declaration public static StringContent CreateStringContent(string value, string mediaType, Encoding encoding) Parameters Type Name Description String value String mediaType Type of the media. Encoding encoding Returns Type Description StringContent HttpContent."
  },
  "api/DotNetHelper_HttpClient.Extension.StringExtension.html": {
    "href": "api/DotNetHelper_HttpClient.Extension.StringExtension.html",
    "title": "Class StringExtension | DotNetHelper-HttpClient",
    "keywords": "Class StringExtension Inheritance Object StringExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Extension Assembly : DotNetHelper-HttpClient.dll Syntax public static class StringExtension Methods | Improve this Doc View Source ReplaceLastOccurrence(String, String, String, StringComparison) Declaration public static string ReplaceLastOccurrence(this string source, string find, string replace, StringComparison comparison) Parameters Type Name Description String source String find String replace StringComparison comparison Returns Type Description String"
  },
  "api/DotNetHelper_HttpClient.Services.RestClient.html": {
    "href": "api/DotNetHelper_HttpClient.Services.RestClient.html",
    "title": "Class RestClient | DotNetHelper-HttpClient",
    "keywords": "Class RestClient Inheritance Object HttpMessageInvoker HttpClient RestClient Implements IDisposable IRestClient Inherited Members HttpClient.GetStringAsync(String) HttpClient.GetStringAsync(Uri) HttpClient.GetByteArrayAsync(String) HttpClient.GetByteArrayAsync(Uri) HttpClient.GetStreamAsync(String) HttpClient.GetStreamAsync(Uri) HttpClient.GetAsync(String) HttpClient.GetAsync(Uri) HttpClient.GetAsync(String, HttpCompletionOption) HttpClient.GetAsync(Uri, HttpCompletionOption) HttpClient.GetAsync(String, CancellationToken) HttpClient.GetAsync(Uri, CancellationToken) HttpClient.GetAsync(String, HttpCompletionOption, CancellationToken) HttpClient.GetAsync(Uri, HttpCompletionOption, CancellationToken) HttpClient.PostAsync(String, HttpContent) HttpClient.PostAsync(Uri, HttpContent) HttpClient.PostAsync(String, HttpContent, CancellationToken) HttpClient.PostAsync(Uri, HttpContent, CancellationToken) HttpClient.PutAsync(String, HttpContent) HttpClient.PutAsync(Uri, HttpContent) HttpClient.PutAsync(String, HttpContent, CancellationToken) HttpClient.PutAsync(Uri, HttpContent, CancellationToken) HttpClient.DeleteAsync(String) HttpClient.DeleteAsync(Uri) HttpClient.DeleteAsync(String, CancellationToken) HttpClient.DeleteAsync(Uri, CancellationToken) HttpClient.SendAsync(HttpRequestMessage) HttpClient.SendAsync(HttpRequestMessage, CancellationToken) HttpClient.SendAsync(HttpRequestMessage, HttpCompletionOption) HttpClient.SendAsync(HttpRequestMessage, HttpCompletionOption, CancellationToken) HttpClient.CancelPendingRequests() HttpClient.Dispose(Boolean) HttpClient.DefaultRequestHeaders HttpClient.BaseAddress HttpClient.Timeout HttpClient.MaxResponseContentBufferSize HttpMessageInvoker.Dispose() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Services Assembly : DotNetHelper-HttpClient.dll Syntax public class RestClient : HttpClient, IDisposable, IRestClient Constructors | Improve this Doc View Source RestClient() Declaration public RestClient() | Improve this Doc View Source RestClient(HttpMessageHandler) Declaration public RestClient(HttpMessageHandler httpClientHandler) Parameters Type Name Description HttpMessageHandler httpClientHandler | Improve this Doc View Source RestClient(HttpMessageHandler, Boolean) Declaration public RestClient(HttpMessageHandler httpClientHandler, bool disposeHandler) Parameters Type Name Description HttpMessageHandler httpClientHandler Boolean disposeHandler Properties | Improve this Doc View Source AlwaysEnsureSuccessCode Gets or sets a value indicating whether [always ensure success code]. Declaration public bool AlwaysEnsureSuccessCode { get; set; } Property Value Type Description Boolean true if [always ensure success code]; otherwise, false . | Improve this Doc View Source HttpRequestExecuteAsync A func that will return a httpresponsemessage this method is used to integrate with polly Declaration public Func<Task<HttpResponseMessage>> HttpRequestExecuteAsync { get; set; } Property Value Type Description Func < Task < HttpResponseMessage >> Methods | Improve this Doc View Source DownloadFile(String, FileStream) Downloads the file. Declaration public void DownloadFile(string url, FileStream fileStream) Parameters Type Name Description String url The URL. FileStream fileStream | Improve this Doc View Source DownloadFile(String, FileStream, IProgress<Double>, Byte[]) Downloads file from url as an asynchronous operation. Declaration public void DownloadFile(string url, FileStream fileStream, IProgress<double> progress, byte[] buffer = null) Parameters Type Name Description String url The URL. FileStream fileStream The filestream that content will be written to IProgress < Double > progress The progress. Byte [] buffer | Improve this Doc View Source DownloadFileAsync(String, FileStream) Downloads the file. Declaration public Task<bool> DownloadFileAsync(string url, FileStream fileStream) Parameters Type Name Description String url The URL. FileStream fileStream Returns Type Description Task < Boolean > true if XXXX, false otherwise. | Improve this Doc View Source DownloadFileAsync(String, FileStream, IProgress<Double>, Byte[]) Downloads file from url as an asynchronous operation. Declaration public Task DownloadFileAsync(string url, FileStream fileStream, IProgress<double> progress, byte[] buffer = null) Parameters Type Name Description String url The URL. FileStream fileStream The filestream that content will be written to IProgress < Double > progress The progress. Byte [] buffer Returns Type Description Task Task<System.Boolean>. | Improve this Doc View Source Get<T>(Func<String, T>, String, Method, HttpContent) execute get type as an synchronous operation. Declaration public T Get<T>(Func<string, T> deserializer, string url, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String url The url. Method method The method. HttpContent content The content. Returns Type Description T Task<T>. Type Parameters Name Description T | Improve this Doc View Source Get<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent) execute get type as an synchronous operation. Declaration public T Get<T>(Func<string, T> deserializer, string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description T Task<T>. Type Parameters Name Description T | Improve this Doc View Source GetAsync<T>(Func<String, T>, String, Method, HttpContent) execute get type as an asynchronous operation. Declaration public Task<T> GetAsync<T>(Func<string, T> deserializer, string url, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String url The url. Method method The method. HttpContent content The content. Returns Type Description Task <T> Task<T>. Type Parameters Name Description T | Improve this Doc View Source GetAsync<T>(Func<String, T>, String, String, List<Parameter>, Method, HttpContent) execute get type as an asynchronous operation. Declaration public Task<T> GetAsync<T>(Func<string, T> deserializer, string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task <T> Task<T>. Type Parameters Name Description T | Improve this Doc View Source GetBytes(String, Method, HttpContent) Execute get bytes as an synchronous operation. Declaration public byte[] GetBytes(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description Byte [] Task<System.Byte[]>. | Improve this Doc View Source GetBytes(String, String, List<Parameter>, Method, HttpContent) Execute get bytes as an synchronous operation. Declaration public byte[] GetBytes(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Byte [] Task<System.Byte[]>. | Improve this Doc View Source GetBytesAsync(String, Method, HttpContent) Execute get bytes as an asynchronous operation. Declaration public Task<byte[]> GetBytesAsync(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description Task < Byte []> Task<System.Byte[]>. | Improve this Doc View Source GetBytesAsync(String, String, List<Parameter>, Method, HttpContent) Execute get bytes as an asynchronous operation. Declaration public Task<byte[]> GetBytesAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < Byte []> Task<System.Byte[]>. | Improve this Doc View Source GetHttpResponse(String, Method, HttpContent) Execute get HTTP response as an synchronous operation. Declaration public HttpResponseMessage GetHttpResponse(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description HttpResponseMessage Task<HttpResponseMessage>. | Improve this Doc View Source GetHttpResponse(String, String, List<Parameter>, Method, HttpContent) Execute get HTTP response as an synchronous operation. Declaration public HttpResponseMessage GetHttpResponse(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description HttpResponseMessage Task<HttpResponseMessage>. | Improve this Doc View Source GetHttpResponseAsync(String, Method, HttpContent) Execute get HTTP response as an asynchronous operation. Declaration public Task<HttpResponseMessage> GetHttpResponseAsync(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The url. Method method The method. HttpContent content The content. Returns Type Description Task < HttpResponseMessage > Task<HttpResponseMessage>. | Improve this Doc View Source GetHttpResponseAsync(String, String, List<Parameter>, Method, HttpContent) Execute get HTTP response as an asynchronous operation. Declaration public Task<HttpResponseMessage> GetHttpResponseAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < HttpResponseMessage > Task<HttpResponseMessage>. | Improve this Doc View Source GetStream(String, Method, HttpContent) Execute get stream as an synchronous operation. Declaration public Stream GetStream(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description Stream Task<Stream>. | Improve this Doc View Source GetStream(String, String, List<Parameter>, Method, HttpContent) Execute get stream as an synchronous operation. Declaration public Stream GetStream(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Stream Task<Stream>. | Improve this Doc View Source GetStreamAsync(String, Method, HttpContent) Execute get stream as an asynchronous operation. Declaration public Task<Stream> GetStreamAsync(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The url. Method method The method. HttpContent content The content. Returns Type Description Task < Stream > Task<Stream>. | Improve this Doc View Source GetStreamAsync(String, String, List<Parameter>, Method, HttpContent) Execute get stream as an asynchronous operation. Declaration public Task<Stream> GetStreamAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < Stream > Task<Stream>. | Improve this Doc View Source GetString(String, Method, HttpContent) execute get response as an synchronous operation. Declaration public string GetString(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description String Task<System.String>. | Improve this Doc View Source GetString(String, String, List<Parameter>, Method, HttpContent) execute get response as an synchronous operation. Declaration public string GetString(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description String Task<System.String>. | Improve this Doc View Source GetStringAsync(String, Method, HttpContent) execute get response as an asynchronous operation. Declaration public Task<string> GetStringAsync(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The url. Method method The method. HttpContent content The content. Returns Type Description Task < String > Task<System.String>. | Improve this Doc View Source GetStringAsync(String, String, List<Parameter>, Method, HttpContent) execute get response as an asynchronous operation. Declaration public Task<string> GetStringAsync(string baseurl, string resource, List<Parameter> headers, Method method, HttpContent content = null) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Method method The method. HttpContent content The content. Returns Type Description Task < String > Task<System.String>. Implements System.IDisposable IRestClient Extension Methods ObjectExtensions.IsNullThrow(Object, String, Exception)"
  },
  "api/DotNetHelper_HttpClient.Interface.IRestClient.html": {
    "href": "api/DotNetHelper_HttpClient.Interface.IRestClient.html",
    "title": "Interface IRestClient | DotNetHelper-HttpClient",
    "keywords": "Interface IRestClient Namespace : DotNetHelper_HttpClient.Interface Assembly : DotNetHelper-HttpClient.dll Syntax public interface IRestClient Methods | Improve this Doc View Source DownloadFile(String, FileStream) Downloads the file. Declaration void DownloadFile(string url, FileStream fileStream) Parameters Type Name Description String url The URL. FileStream fileStream | Improve this Doc View Source DownloadFileAsync(String, FileStream) Downloads the file. Declaration Task<bool> DownloadFileAsync(string url, FileStream fileStream) Parameters Type Name Description String url The URL. FileStream fileStream Returns Type Description Task < Boolean > true if XXXX, false otherwise. | Improve this Doc View Source Get<T>(Func<String, T>, String, Method, HttpContent) execute get type as an synchronous operation. Declaration T Get<T>(Func<string, T> deserializer, string url, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String url The url. Method method The method. HttpContent content The content. Returns Type Description T Task<T>. Type Parameters Name Description T | Improve this Doc View Source GetAsync<T>(Func<String, T>, String, Method, HttpContent) execute get type as an asynchronous operation. Declaration Task<T> GetAsync<T>(Func<string, T> deserializer, string url, Method method, HttpContent content = null) Parameters Type Name Description Func < String , T> deserializer String url The url. Method method The method. HttpContent content The content. Returns Type Description Task <T> Task<T>. Type Parameters Name Description T | Improve this Doc View Source GetBytes(String, Method, HttpContent) Execute get bytes as an synchronous operation. Declaration byte[] GetBytes(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description Byte [] Task<System.Byte[]>. | Improve this Doc View Source GetBytesAsync(String, Method, HttpContent) Execute get bytes as an asynchronous operation. Declaration Task<byte[]> GetBytesAsync(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description Task < Byte []> Task<System.Byte[]>. | Improve this Doc View Source GetHttpResponse(String, Method, HttpContent) Execute get HTTP response as an synchronous operation. Declaration HttpResponseMessage GetHttpResponse(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description HttpResponseMessage Task<HttpResponseMessage>. | Improve this Doc View Source GetHttpResponseAsync(String, Method, HttpContent) Execute get HTTP response as an asynchronous operation. Declaration Task<HttpResponseMessage> GetHttpResponseAsync(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The url. Method method The method. HttpContent content The content. Returns Type Description Task < HttpResponseMessage > Task<HttpResponseMessage>. | Improve this Doc View Source GetStream(String, Method, HttpContent) Execute get stream as an synchronous operation. Declaration Stream GetStream(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description Stream Task<Stream>. | Improve this Doc View Source GetStreamAsync(String, Method, HttpContent) Execute get stream as an asynchronous operation. Declaration Task<Stream> GetStreamAsync(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The url. Method method The method. HttpContent content The content. Returns Type Description Task < Stream > Task<Stream>. | Improve this Doc View Source GetString(String, Method, HttpContent) execute get response as an synchronous operation. Declaration string GetString(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The baseurl. Method method The method. HttpContent content The content. Returns Type Description String Task<System.String>. | Improve this Doc View Source GetStringAsync(String, Method, HttpContent) execute get response as an asynchronous operation. Declaration Task<string> GetStringAsync(string url, Method method, HttpContent content = null) Parameters Type Name Description String url The url. Method method The method. HttpContent content The content. Returns Type Description Task < String > Task<System.String>. Extension Methods ObjectExtensions.IsNullThrow(Object, String, Exception)"
  },
  "api/DotNetHelper_HttpClient.Helpers.URLHelper.html": {
    "href": "api/DotNetHelper_HttpClient.Helpers.URLHelper.html",
    "title": "Class URLHelper | DotNetHelper-HttpClient",
    "keywords": "Class URLHelper Inheritance Object URLHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Helpers Assembly : DotNetHelper-HttpClient.dll Syntax public static class URLHelper Methods | Improve this Doc View Source CreateUrl(String, String, List<Parameter>) Combines the baseurl with the endpoint and apply any url paramters to create a full address Declaration public static string CreateUrl(string baseurl, string resource, List<Parameter> headers) Parameters Type Name Description String baseurl The baseurl. String resource The resource. List < Parameter > headers The headers. Returns Type Description String System.String. | Improve this Doc View Source UrlEncode(String) URLs the encode. Declaration public static string UrlEncode(string value) Parameters Type Name Description String value The value. Returns Type Description String System.String. | Improve this Doc View Source UrlEscape(String) URLs the encode. Declaration public static string UrlEscape(string value) Parameters Type Name Description String value The value. Returns Type Description String System.String."
  },
  "api/DotNetHelper_HttpClient.Helpers.html": {
    "href": "api/DotNetHelper_HttpClient.Helpers.html",
    "title": "Namespace DotNetHelper_HttpClient.Helpers | DotNetHelper-HttpClient",
    "keywords": "Namespace DotNetHelper_HttpClient.Helpers Classes HttpContentHelper URLHelper"
  },
  "api/DotNetHelper_HttpClient.Extension.ObjectExtensions.html": {
    "href": "api/DotNetHelper_HttpClient.Extension.ObjectExtensions.html",
    "title": "Class ObjectExtensions | DotNetHelper-HttpClient",
    "keywords": "Class ObjectExtensions Inheritance Object ObjectExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Extension Assembly : DotNetHelper-HttpClient.dll Syntax public static class ObjectExtensions Methods | Improve this Doc View Source IsNullThrow(Object, String, Exception) Declaration public static void IsNullThrow(this object obj, string name, Exception error = null) Parameters Type Name Description Object obj String name Exception error"
  },
  "tutorials/GenerateSql/datatable2sql.html": {
    "href": "tutorials/GenerateSql/datatable2sql.html",
    "title": "SAMPLE ARTICLE | DotNetHelper-HttpClient",
    "keywords": "SAMPLE ARTICLE"
  },
  "api/DotNetHelper_HttpClient.Extension.MethodExtension.html": {
    "href": "api/DotNetHelper_HttpClient.Extension.MethodExtension.html",
    "title": "Class MethodExtension | DotNetHelper-HttpClient",
    "keywords": "Class MethodExtension Inheritance Object MethodExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_HttpClient.Extension Assembly : DotNetHelper-HttpClient.dll Syntax public static class MethodExtension Methods | Improve this Doc View Source MapToHttpMethod(Method) Declaration public static HttpMethod MapToHttpMethod(this Method method) Parameters Type Name Description Method method Returns Type Description HttpMethod"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper-HttpClient | DotNetHelper-HttpClient",
    "keywords": "DotNetHelper-HttpClient DotNetHelper-HttpClient is a simple lightweight library for execute restful requests. Easy Integration with polly. Support both asynchronous and synchronous operation || View on Github || Features All apis are available in both asynchronous and synchronous operation Get string from rest api var client = new RestClient(); var json = client.GetString($\"https://jsonplaceholder.typicode.com/todos/1\", Method.Get); Get Stream from rest api var client = new RestClient(); var stream = client.GetStream($\"https://jsonplaceholder.typicode.com/todos/1\", Method.Get); Get bytes[] from rest api var client = new RestClient(); var bytes = client.GetBytes($\"https://jsonplaceholder.typicode.com/todos/1\", Method.Get); Get HttpResponseMessage from rest api var client = new RestClient(); var httpResponse = client.GetHttpResponse($\"https://jsonplaceholder.typicode.com/todos/1\", Method.Get); Get Generic Type from rest api var client = new RestClient(); // The first parameter takes a Func<string, T> this allows you to implement your own deserializer // In doing this allows this library to not depend on third party libraries which locks // developer to using certain version var employee = client.Get(JsonConvert.DeserializeObject<Employee>,$\"https://jsonplaceholder.typicode.com/todos/1\", Method.Get); <!-- Links. --> <!-- Documentation Links. -->"
  }
}